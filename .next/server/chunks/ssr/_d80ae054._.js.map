{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/jsm_banking/components/HeaderBox.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst HeaderBox = ({type = \"title\", title, subtext, user}: HeaderBoxProps) => {\r\n  return (\r\n    <div className=\"header-box\">\r\n        <h1 className=\"header-box-title\">\r\n            {title}\r\n            {type === \"greeting\" && (\r\n            <span className=\"text-bankGradient\">\r\n                &nbsp;{user}\r\n            </span>\r\n        )}\r\n        </h1>\r\n        <p className=\"header-box-subtext\">{subtext}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeaderBox"],"names":[],"mappings":";;;;;AAEA,MAAM,YAAY,CAAC,EAAC,OAAO,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAiB;IACvE,qBACE,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;;oBACT;oBACA,SAAS,4BACV,8OAAC;wBAAK,WAAU;;4BAAoB;4BACzB;;;;;;;;;;;;;0BAIf,8OAAC;gBAAE,WAAU;0BAAsB;;;;;;;;;;;;AAG3C;uCAEe","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/jsm_banking/lib/utils.ts"],"sourcesContent":["/* eslint-disable no-prototype-builtins */\r\nimport { type ClassValue, clsx } from \"clsx\";\r\nimport qs from \"query-string\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\n// FORMAT DATE TIME\r\nexport const formatDateTime = (dateString: Date) => {\r\n  const dateTimeOptions: Intl.DateTimeFormatOptions = {\r\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\r\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\r\n    day: \"numeric\", // numeric day of the month (e.g., '25')\r\n    hour: \"numeric\", // numeric hour (e.g., '8')\r\n    minute: \"numeric\", // numeric minute (e.g., '30')\r\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\r\n  };\r\n\r\n  const dateDayOptions: Intl.DateTimeFormatOptions = {\r\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\r\n    year: \"numeric\", // numeric year (e.g., '2023')\r\n    month: \"2-digit\", // abbreviated month name (e.g., 'Oct')\r\n    day: \"2-digit\", // numeric day of the month (e.g., '25')\r\n  };\r\n\r\n  const dateOptions: Intl.DateTimeFormatOptions = {\r\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\r\n    year: \"numeric\", // numeric year (e.g., '2023')\r\n    day: \"numeric\", // numeric day of the month (e.g., '25')\r\n  };\r\n\r\n  const timeOptions: Intl.DateTimeFormatOptions = {\r\n    hour: \"numeric\", // numeric hour (e.g., '8')\r\n    minute: \"numeric\", // numeric minute (e.g., '30')\r\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\r\n  };\r\n\r\n  const formattedDateTime: string = new Date(dateString).toLocaleString(\r\n    \"en-US\",\r\n    dateTimeOptions\r\n  );\r\n\r\n  const formattedDateDay: string = new Date(dateString).toLocaleString(\r\n    \"en-US\",\r\n    dateDayOptions\r\n  );\r\n\r\n  const formattedDate: string = new Date(dateString).toLocaleString(\r\n    \"en-US\",\r\n    dateOptions\r\n  );\r\n\r\n  const formattedTime: string = new Date(dateString).toLocaleString(\r\n    \"en-US\",\r\n    timeOptions\r\n  );\r\n\r\n  return {\r\n    dateTime: formattedDateTime,\r\n    dateDay: formattedDateDay,\r\n    dateOnly: formattedDate,\r\n    timeOnly: formattedTime,\r\n  };\r\n};\r\n\r\nexport function formatAmount(amount: number): string {\r\n  const formatter = new Intl.NumberFormat(\"en-CA\", {\r\n    style: \"currency\",\r\n    currency: \"CAD\", // Canadian Dollar\r\n    minimumFractionDigits: 2,\r\n  });\r\n\r\n  return formatter.format(amount);\r\n}\r\n\r\nexport const parseStringify = (value: any) => JSON.parse(JSON.stringify(value));\r\n\r\nexport const removeSpecialCharacters = (value: string) => {\r\n  return value.replace(/[^\\w\\s]/gi, \"\");\r\n};\r\n\r\ninterface UrlQueryParams {\r\n  params: string;\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nexport function formUrlQuery({ params, key, value }: UrlQueryParams) {\r\n  const currentUrl = qs.parse(params);\r\n\r\n  currentUrl[key] = value;\r\n\r\n  return qs.stringifyUrl(\r\n    {\r\n      url: window.location.pathname,\r\n      query: currentUrl,\r\n    },\r\n    { skipNull: true }\r\n  );\r\n}\r\n\r\nexport function getAccountTypeColors(type: AccountTypes) {\r\n  switch (type) {\r\n    case \"depository\":\r\n      return {\r\n        bg: \"bg-blue-25\",\r\n        lightBg: \"bg-blue-100\",\r\n        title: \"text-blue-900\",\r\n        subText: \"text-blue-700\",\r\n      };\r\n\r\n    case \"credit\":\r\n      return {\r\n        bg: \"bg-success-25\",\r\n        lightBg: \"bg-success-100\",\r\n        title: \"text-success-900\",\r\n        subText: \"text-success-700\",\r\n      };\r\n\r\n    default:\r\n      return {\r\n        bg: \"bg-green-25\",\r\n        lightBg: \"bg-green-100\",\r\n        title: \"text-green-900\",\r\n        subText: \"text-green-700\",\r\n      };\r\n  }\r\n}\r\n\r\nexport function countTransactionCategories(\r\n  transactions: Transaction[]\r\n): CategoryCount[] {\r\n  const categoryCounts: { [category: string]: number } = {};\r\n  let totalCount = 0;\r\n\r\n  // Iterate over each transaction\r\n  transactions &&\r\n    transactions.forEach((transaction) => {\r\n      // Extract the category from the transaction\r\n      const category = transaction.category;\r\n\r\n      // If the category exists in the categoryCounts object, increment its count\r\n      if (categoryCounts.hasOwnProperty(category)) {\r\n        categoryCounts[category]++;\r\n      } else {\r\n        // Otherwise, initialize the count to 1\r\n        categoryCounts[category] = 1;\r\n      }\r\n\r\n      // Increment total count\r\n      totalCount++;\r\n    });\r\n\r\n  // Convert the categoryCounts object to an array of objects\r\n  const aggregatedCategories: CategoryCount[] = Object.keys(categoryCounts).map(\r\n    (category) => ({\r\n      name: category,\r\n      count: categoryCounts[category],\r\n      totalCount,\r\n    })\r\n  );\r\n\r\n  // Sort the aggregatedCategories array by count in descending order\r\n  aggregatedCategories.sort((a, b) => b.count - a.count);\r\n\r\n  return aggregatedCategories;\r\n}\r\n\r\nexport function extractCustomerIdFromUrl(url: string) {\r\n  // Split the URL string by '/'\r\n  const parts = url.split(\"/\");\r\n\r\n  // Extract the last part, which represents the customer ID\r\n  const customerId = parts[parts.length - 1];\r\n\r\n  return customerId;\r\n}\r\n\r\nexport function encryptId(id: string) {\r\n  return btoa(id);\r\n}\r\n\r\nexport function decryptId(id: string) {\r\n  return atob(id);\r\n}\r\n\r\nexport const getTransactionStatus = (date: Date) => {\r\n  const today = new Date();\r\n  const twoDaysAgo = new Date(today);\r\n  twoDaysAgo.setDate(today.getDate() - 2);\r\n\r\n  return date > twoDaysAgo ? \"Processing\" : \"Success\";\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///C:/jsm_banking/components/AnimatedCounter.tsx"],"sourcesContent":["import React from 'react'\r\nimport CountUp from 'react-countup'\r\n\r\nconst AnimatedCounter = ({ amount }:{ amount: number }) => {\r\n  return (\r\n    <div>\r\n        <CountUp \r\n        duration={2} \r\n        separator=\" \" \r\n        decimals={2} \r\n        decimal=\",\" \r\n        suffix =\"$\" \r\n        end={amount}  />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnimatedCounter"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,kBAAkB,CAAC,EAAE,MAAM,EAAqB;IACpD,qBACE,8OAAC;kBACG,cAAA,8OAAC,kJAAA,CAAA,UAAO;YACR,UAAU;YACV,WAAU;YACV,UAAU;YACV,SAAQ;YACR,QAAQ;YACR,KAAK;;;;;;;;;;;AAGb;uCAEe","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///C:/jsm_banking/components/TotalBalanceBox.tsx"],"sourcesContent":["import { formatAmount } from '@/lib/utils'\r\nimport React from 'react'\r\nimport CountUp from 'react-countup'\r\nimport AnimatedCounter from './AnimatedCounter'\r\n\r\nconst TotalBalanceBox = ({\r\n    accounts = [], totalBanks, totalCurrentBalance}: TotalBalanceBoxProps) => {\r\n  return (\r\n    <section className=\"total-balance\">\r\n        <div className=\"total-balance-chart\">\r\n            {}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col gap-6\">\r\n            <h2 className=\"header-2\">\r\n                Bank Accounts : {totalBanks} \r\n            </h2>\r\n            <div className=\"flex flex-col gap-2\">\r\n                <p className=\"total-balance-label\">\r\n                    Total Current Balance\r\n                </p>\r\n                <p className=\"total-balance-amount flex-center gap-2\">\r\n                    <AnimatedCounter />\r\n                    {formatAmount(totalCurrentBalance) }\r\n                </p>\r\n            </div>\r\n        </div>\r\n        \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TotalBalanceBox"],"names":[],"mappings":";;;;AAAA;AAGA;;;;AAEA,MAAM,kBAAkB,CAAC,EACrB,WAAW,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAuB;IACvE,qBACE,8OAAC;QAAQ,WAAU;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BAIf,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;;4BAAW;4BACJ;;;;;;;kCAErB,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAE,WAAU;0CAAsB;;;;;;0CAGnC,8OAAC;gCAAE,WAAU;;kDACT,8OAAC,8HAAA,CAAA,UAAe;;;;;oCACf,CAAA,GAAA,4GAAA,CAAA,eAAY,AAAD,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;AAOlC;uCAEe","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///C:/jsm_banking/app/%28root%29/page.tsx"],"sourcesContent":["import HeaderBox from \"@/components/HeaderBox\";\r\nimport TotalBalanceBox from \"@/components/TotalBalanceBox\";\r\n\r\n\r\nconst Home = () => {\r\n  const loggedIn = {firstName:\"David\"};\r\n  return (\r\n    <section className=\"home\">\r\n      <div className='home-content'>\r\n        <header className='home-header'>\r\n          <HeaderBox \r\n            type=\"greeting\"\r\n            title=\"Welcome\"\r\n            user={loggedIn?.firstName || \"Guest\"}\r\n            subtext=\"Access and manage your account and transactions efficiently.\"\r\n          />\r\n\r\n          <TotalBalanceBox \r\n            accounts={[]}\r\n            totalBanks={1}\r\n            totalCurrentBalance={1250.35}\r\n          />\r\n        </header>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n/*SI ¨CA NE MARCHE PAS, ESSAYER ¨CA??\r\nexport default function Home() {\r\n  return (\r\n<h1 className=\"text-3xl font-bold underline decoration-red-500 underline-offset-4\">\r\n  Red underline is good!\r\n</h1>\r\n  )\r\n}*/\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAGA,MAAM,OAAO;IACX,MAAM,WAAW;QAAC,WAAU;IAAO;IACnC,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC,wHAAA,CAAA,UAAS;wBACR,MAAK;wBACL,OAAM;wBACN,MAAM,UAAU,aAAa;wBAC7B,SAAQ;;;;;;kCAGV,8OAAC,8HAAA,CAAA,UAAe;wBACd,UAAU,EAAE;wBACZ,YAAY;wBACZ,qBAAqB;;;;;;;;;;;;;;;;;;;;;;AAMjC;uCAEe,KAGf;;;;;;;CAOC","debugId":null}}]
}